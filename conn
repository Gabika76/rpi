#!/bin/bash
SCRIPTLOG=~/$(date +"%Y-%m-%d")_log.txt
MODDEVICE=/dev/cdc-wdm0
QMICMD="sudo qmicli --device=/dev/cdc-wdm0 "
TIME=$(date +"%T")

exec &>> $SCRIPTLOG

if [ ! -e "$MODDEVICE" ] 
then
	echo "wdm0 device does not exist, terminating!" | ts '%H:%M:%S' && exit
else
	echo "wdm0 device does exist!" | ts '%H:%M:%S' | ts '%H:%M:%S'
fi
if [ ! -w "$MODDEVICE" ] 
then
	sudo chmod 666 $MODDEVICE && echo "wdm0 device is not writeable, add permissions" | ts '%H:%M:%S'
fi

DFORMAT=$($QMICMD--wda-get-data-format 2>&1)
GETOPERMODE=$($QMICMD --dms-get-operating-mode 2>&1)
SETOPERMODE=$($QMICMD --dms-set-operating-mode 2>&1)

echo "$DFORMAT" | ts '%H:%M:%S'
if echo "$DFORMAT" | grep 802-3  >/dev/null; then
  echo $TIME "Data format OK"
else
  echo $TIME "Data format set to 802-3 ..."
  $($QMICMD --wda-set-data-format='802-3') 2>&1
fi
echo "$GETOPERMODE" | ts '%H:%M:%S'
if echo "$GETOPERMODE" | grep online  >/dev/null; then
  echo $TIME "Operation mode: online"
else
  echo $TIME "Set operation mode to online ..."
  $($QMICMD --dms-set-operating-mode='online') 
fi

if qmi-network $MODDEVICE status | grep disconnected; then
  echo "network disconnected, restarting ..." | ts '%H:%M:%S'
  modstatus=$(qmi-network $MODDEVICE start 2>&1)
  if echo $modstatus | grep "cannot re-start"; then
    echo "network cannot be restarted, del tmp network state ..." | ts '%H:%M:%S'
    rm /tmp/qmi-network-state-cdc-wdm0
  elif echo $modstatus | grep "no-service"; then
    echo "network cannot be restarted, reset operating mode ..." | ts '%H:%M:%S'
    echo "$SETOPERMODE='reset'"  | ts '%H:%M:%S'
  fi
fi
#qmi-network $MODDEVICE start 2>&1 | ts '%H:%M:%S'

sudo udhcpc -q -f -n -i wwan0 2>&1 | ts '%H:%M:%S'

